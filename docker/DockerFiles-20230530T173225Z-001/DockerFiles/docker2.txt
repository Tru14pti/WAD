Microsoft Windows [Version 10.0.22621.1413]
(c) Microsoft Corporation. All rights reserved.
--checking node version
**********************************
C:\Users\shantanu>node -v
v18.15.0
***********************************
--create folder hellonode and go to that folder

C:\Users\shantanu>cd hellonode

C:\Users\shantanu\hellonode>node app.js
hello world welcome here
**************************************************
--pulling node from the docker repository
PS C:\Users\shantanu\hellonode> docker pull node
Using default tag: latest
latest: Pulling from library/node
32fb02163b6b: Pull complete
167c7feebee8: Pull complete
d6dfff1f6f3d: Pull complete
e9cdcd4942eb: Pull complete
ca3bce705f6c: Pull complete
4f4cf292bc62: Pull complete
6fefd22bacd9: Pull complete
b29db415cb2e: Pull complete
adc76471ff8a: Pull complete
Digest: sha256:2405a991a6d9f6ac1d991feefc0a4539d5187abd2ca532fd18f7185c98b32a45
Status: Downloaded newer image for node:latest
docker.io/library/node:latest
*************************************************************************************************
--checking the images prent in docker file here node is appearing as an image

PS C:\Users\shantanu\hellonode> docker images
REPOSITORY               TAG       IMAGE ID       CREATED         SIZE
mywebsite                latest    5850d47c9dd3   41 hours ago    41.6MB
<none>                   <none>    bd820a752d87   5 days ago      12.8MB
node                     latest    ac779c6d4c57   5 days ago      999MB
docker/getting-started   latest    3e4394f6b72f   2 months ago    47MB
hello-world              latest    feb5d9fea6a5   18 months ago   13.3kB
*************************************************************************************************

--building a docker image with name firstdocker. -t is for tagging the name

PS C:\Users\shantanu\hellonode> docker image build -t firstdocker . 
[+] Building 83.0s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                                          0.5s
 => => transferring dockerfile: 94B                                                                                                                                                           0.3s
 => [internal] load .dockerignore                                                                                                                                                             0.2s 
 => => transferring context: 2B                                                                                                                                                               0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                                                4.4s
 => [auth] library/node:pull token for registry-1.docker.io                                                                                                                                   0.0s
 => [internal] load build context                                                                                                                                                             0.4s
 => => transferring context: 168B                                                                                                                                                             0.2s 
 => [1/2] FROM docker.io/library/node:alpine@sha256:a67a33f791d1c86ced985f339fa160f6188f590ebbe963fe11cc00adc971fa41                                                                         70.9s 
 => => resolve docker.io/library/node:alpine@sha256:a67a33f791d1c86ced985f339fa160f6188f590ebbe963fe11cc00adc971fa41                                                                          0.2s 
 => => sha256:a67a33f791d1c86ced985f339fa160f6188f590ebbe963fe11cc00adc971fa41 1.43kB / 1.43kB                                                                                                0.0s
 => => sha256:f487fdae88463b8adba1cc82af1bc93058a4bc2f44c7c5c968958c6460d4c5c3 1.16kB / 1.16kB                                                                                                0.0s 
 => => sha256:cddebfd139342425ebc719224414486c06f0159d262f9cf3004453df9f3ed4b9 6.48kB / 6.48kB                                                                                                0.0s 
 => => sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51 447B / 447B                                                                                                    0.6s
 => => sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb 48.23MB / 48.23MB                                                                                             32.1s
 => => sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1 2.35MB / 2.35MB                                                                                                6.4s 
 => => extracting sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb                                                                                                    31.3s
 => => extracting sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1                                                                                                     2.1s
 => => extracting sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51                                                                                                     0.0s 
 => [2/2] COPY . /app                                                                                                                                                                         5.6s 
 => exporting to image                                                                                                                                                                        0.5s 
 => => exporting layers                                                                                                                                                                       0.3s 
 => => writing image sha256:874787b233f89c8b87c7f5aaab8c38dd2a64424d6142fd3b72e657a96fa0533b                                                                                                  0.0s 
 => => naming to docker.io/library/firstdocker                                                                                                                                                0.0s

*************************************************************************************************************************************************
PS C:\Users\shantanu\hellonode> docker images
REPOSITORY               TAG       IMAGE ID       CREATED         SIZE
firstdocker              latest    874787b233f8   3 minutes ago   177MB
mywebsite                latest    5850d47c9dd3   41 hours ago    41.6MB
<none>                   <none>    bd820a752d87   5 days ago      12.8MB
node                     latest    ac779c6d4c57   6 days ago      999MB
docker/getting-started   latest    3e4394f6b72f   2 months ago    47MB
hello-world              latest    feb5d9fea6a5   18 months ago   13.3kB
**************************************************************************************************************************************************

--here we check the login credentials. we first need to login through the docker desktop to the web. We need to login to the hub.

PS C:\Users\shantanu\hellonode> docker login
Authenticating with existing credentials...
Login Succeeded

Logging in with your password grants your terminal complete access to your account.
******************************************************************************************************************************************************
--Push an image or a repository to a registry

PS C:\Users\shantanu\hellonode> docker tag firstdocker truptipacharne/hellonode
PS C:\Users\shantanu\hellonode> docker push truptipacharne/hellonode
Using default tag: latest
The push refers to repository [docker.io/truptipacharne/hellonode]
463b85d48d0f: Pushed
a153225bcf3b: Mounted from library/node
6dc3cd4155cc: Mounted from library/node
fb1f755fd9d5: Mounted from library/node
7cd52847ad77: Mounted from library/node
latest: digest: sha256:4f4e49796a076cf840403d51e7e85505ffce3ba84a004ac30034b83f309bf6fb size: 1365
PS C:\Users\shantanu\hellonode> 
*********************************************************************************************************************************************************
--help command helps in 
PS C:\Users\shantanu\docnode> docker --help

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "C:\\Users\\shantanu\\.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "C:\\Users\\shantanu\\.docker\\ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "C:\\Users\\shantanu\\.docker\\cert.pem")
      --tlskey string      Path to TLS key file (default
                           "C:\\Users\\shantanu\\.docker\\key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.10.3)
  compose*    Docker Compose (Docker Inc., v2.15.1)
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.1.0)
  extension*  Manages Docker extensions (Docker Inc., v0.2.18)
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.25.0)
  scout*      Command line tool for Docker Scout (Docker Inc., v0.6.0)
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

To get more help with docker, check out our guides at https://docs.docker.com/go/guides/

PS C:\Users\shantanu\docnode> docker --help pull

Usage:  docker pull [OPTIONS] NAME[:TAG|@DIGEST]

Pull an image or a repository from a registry

Options:
  -a, --all-tags                Download all tagged images in the repository
      --disable-content-trust   Skip image verification (default true)
      --platform string         Set platform if server is multi-platform
                                capable
  -q, --quiet                   Suppress verbose output
PS C:\Users\shantanu\docnode> docker --help push

Usage:  docker push [OPTIONS] NAME[:TAG]

Push an image or a repository to a registry

Options:
  -a, --all-tags                Push all tagged images in the repository
      --disable-content-trust   Skip image signing (default true)
  -q, --quiet                   Suppress verbose output

PS C:\Users\shantanu\docnode> docker logs df6e5a28616418e281fe48815fb1d37671c025a8f0036f292df0453a585f1f54
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/03/23 13:39:46 [notice] 1#1: using the "epoll" event method
2023/03/23 13:39:46 [notice] 1#1: nginx/1.23.3
2023/03/23 13:39:46 [notice] 1#1: built by gcc 12.2.1 20220924 (Alpine 12.2.1_git20220924-r4)
2023/03/23 13:39:46 [notice] 1#1: OS: Linux 5.10.102.1-microsoft-standard-WSL2
2023/03/23 13:39:46 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2023/03/23 13:39:46 [notice] 1#1: start worker processes
2023/03/23 13:39:46 [notice] 1#1: start worker process 30
2023/03/23 13:39:46 [notice] 1#1: start worker process 31
2023/03/23 13:39:46 [notice] 1#1: start worker process 32
2023/03/23 13:39:46 [notice] 1#1: start worker process 33
2023/03/23 13:39:46 [notice] 1#1: start worker process 34
2023/03/23 13:39:46 [notice] 1#1: start worker process 35
2023/03/23 13:39:46 [notice] 1#1: start worker process 36
2023/03/23 13:39:46 [notice] 1#1: start worker process 37
PS C:\Users\shantanu\docnode> 

link for the docker commands :https://docs.docker.com/engine/reference/commandline/docker/